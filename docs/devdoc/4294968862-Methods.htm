<html><head><title>Functions Methods</title><link href="styles/default.css" type="text/css" rel="stylesheet" /></head><body><div class="header"> </div><br class="clear" /><div class="navigation"><ul><li><a href="index.htm">Documentation</a></li></ul><ul><li><a class="" href="4294967296-DBaddin.htm">DBaddin</a><ul><li><a class="" href="4294968862.htm">Functions</a><ul><li><a class="current" href="4294968862-Methods.htm">Methods</a><ul><li><a class="" href="4294968893.htm">chainCells</a></li><li><a class="" href="4294968985.htm">checkParamsAndCache</a></li><li><a class="" href="4294968982.htm">checkQueryAndTarget</a></li><li><a class="" href="4294968888.htm">concatCells</a></li><li><a class="" href="4294968890.htm">concatCellsSep</a></li><li><a class="" href="4294968903.htm">concatParamStringOnRanges</a></li><li><a class="" href="4294968895.htm">currentWorkbook</a></li><li><a class="" href="4294968979.htm">DBAddinEnvironment</a></li><li><a class="" href="4294968980.htm">DBAddinSetting</a></li><li><a class="" href="4294968866.htm">DBDate</a></li><li><a class="" href="4294968882.htm">DBinClause</a></li><li><a class="" href="4294968886.htm">DBinClauseDate</a></li><li><a class="" href="4294968884.htm">DBinClauseStr</a></li><li><a class="" href="4294968938.htm">DBListFetch</a></li><li><a class="" href="4294968948.htm">DBListFetchAction</a></li><li><a class="" href="4294968962.htm">DBRowFetch</a></li><li><a class="" href="4294968966.htm">DBRowFetchAction</a></li><li><a class="" href="4294968921.htm">DBSetPowerQuery</a></li><li><a class="" href="4294968924.htm">DBSetPowerQueryAction</a></li><li><a class="" href="4294968910.htm">DBSetQuery</a></li><li><a class="" href="4294968914.htm">DBSetQueryAction</a></li><li><a class="" href="4294968872.htm">DBString</a></li><li><a class="" href="4294968897.htm">DoConcatCellsSep</a></li><li><a class="" href="4294968934.htm">finishAction</a></li><li><a class="" href="4294968869.htm">formatDBDate</a></li><li><a class="" href="4294968879.htm">formatPQDate</a></li><li><a class="" href="4294968876.htm">PQDate</a></li><li><a class="" href="4294968874.htm">PQString</a></li><li><a class="" href="4294968864.htm">preventRefresh</a></li><li><a class="" href="4294968973.htm">removeRangeNames</a></li><li><a class="" href="4294968976.htm">restoreRangeNames</a></li><li><a class="" href="4294968929.htm">setExtents</a></li><li><a class="" href="4294968989.htm">ToRange</a></li></ul></li></ul></li></ul></li></ul></div><div class="content"><h1>Functions Methods</h1><p>
						The Functions type exposes the following members.
					</p><h2>Methods</h2><table><thead><tr><th class="icon" /><th>Name</th><th>Summary</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968893.htm">chainCells(Object[])</a></td><td><div class="summary">chains values contained in chainPart together with commas, mainly used for creating select header</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968985.htm">checkParamsAndCache(ref Object, Object, Object)</a></td><td><div class="summary">checks calculation mode, query and cached status message.</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968982.htm">checkQueryAndTarget(Object, Object)</a></td><td><div class="summary">checks Query and targetRange parameters for existence and return error message.</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968888.htm">concatCells(Object[])</a></td><td><div class="summary">concatenates values contained in concatPart together (using .value attribute for cells)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968890.htm">concatCellsSep(String, Object[])</a></td><td><div class="summary">concatenates values contained in concatPart (using .value for cells) using a separator</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968903.htm">concatParamStringOnRanges(String, String, String, String, String, Object[])</a></td><td><div class="summary">concatenate parameters into template String through replacing the placeholders by the values given in paramRanges</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968895.htm">currentWorkbook(Boolean)</a></td><td><div class="summary">get current Workbook path + filename or Workbook path only, if onlyPath is set</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968979.htm">DBAddinEnvironment()</a></td><td><div class="summary">Get the current selected Environment for DB Functions</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968980.htm">DBAddinSetting(Object)</a></td><td><div class="summary">Get the settings as given in keyword (e.g. SERVER=) for the currently selected Environment for DB Functions</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968866.htm">DBDate(Object, Int32)</a></td><td><div class="summary">Create database compliant date, time or datetime string from excel date type value</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968882.htm">DBinClause(Object[])</a></td><td><div class="summary">Create an in clause from cell values, strings are created with quotation marks, dates are created with DBDate</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968886.htm">DBinClauseDate(Object[])</a></td><td><div class="summary">Create an in clause from cell values, strings are created with quotation marks, dates are created with DBDate</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968884.htm">DBinClauseStr(Object[])</a></td><td><div class="summary">Create an in clause from cell values, strings are created with quotation marks, dates are created with DBDate</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968938.htm">DBListFetch(Object, Object, Object, Object, Int32, Object, Object, Object, Object)</a></td><td><div class="summary">Fetches a list of data defined by query into TargetRange. Optionally copy formulas contained in FormulaRange, extend list depending on ExtendDataArea (0(default) = overwrite, 1=insert Cells, 2=insert Rows) and add field headers if HeaderInfo = TRUE </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968948.htm">DBListFetchAction(String, String, Range, Range, String, Object, Int32, Boolean, Boolean, Boolean, Boolean, String, String)</a></td><td><div class="summary">Actually do the work for DBListFetch: Query list of data delimited by maxRows and maxCols, write it into targetCells additionally copy formulas contained in formulaRange and extend list depending on extendArea</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968962.htm">DBRowFetch(Object, Object, Object[])</a></td><td><div class="summary">Fetches a row (single record) queried (defined in query) from DB (defined in ConnString) into targetArray</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968966.htm">DBRowFetchAction(String, String, Range, Object, String, Boolean)</a></td><td><div class="summary">Actually do the work for DBRowFetch: Query (assumed) one row of data, write it into targetCells</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968921.htm">DBSetPowerQuery(Object, Object)</a></td><td><div class="summary">Stores a query into an powerquery defined by queryName</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968924.htm">DBSetPowerQueryAction(String, String, Range, String)</a></td><td><div class="summary">set Query parameters (query text and connection string) of Query List or pivot table (incl. chart)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968910.htm">DBSetQuery(Object, Object, Object)</a></td><td><div class="summary">Stores a query into an Object defined in targetRange (an embedded MS Query/List object, Pivot table, etc.)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968914.htm">DBSetQueryAction(String, String, Range, String, Range, String)</a></td><td><div class="summary">set Query parameters (query text and connection string) of Query List or pivot table (incl. chart)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968872.htm">DBString(Object[])</a></td><td><div class="summary">Create a database compliant string from cell values, potentially concatenating with other parts for easy inclusion of wildcards (%,_)</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968897.htm">DoConcatCellsSep(String, Boolean, Boolean, Boolean, Object[])</a></td><td><div class="summary">private function that actually concatenates values contained in Object array concatParts together (either using .text or .value for cells in concatParts) using a separator</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968934.htm">finishAction(XlCalculation, String, String)</a></td><td><div class="summary">common for DBListFetch and DBRowFetch Action procedures to finish, resetting anything (Cursor, calc mode, status bar, screen updating) that was set otherwise...</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968869.htm">formatDBDate(Double, Int32)</a></td><td><div class="summary">takes an OADate and formats it as a DB Compliant string, using formatting as formatting instruction</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968879.htm">formatPQDate(Double, Boolean)</a></td><td><div class="summary">takes an OADate and formats it as a powerquery compliant #date, #time or #datetime function</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968876.htm">PQDate(Object, Boolean)</a></td><td><div class="summary">Creates a powerquery compliant #date function from excel date type value</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968874.htm">PQString(Object[])</a></td><td><div class="summary">Create a powerquery compliant string from cell values, potentially concatenating with other parts for easy inclusion of wildcards (%,_)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968864.htm">preventRefresh(Boolean)</a></td><td><div class="summary">set preventing of refreshing DB Functions</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968973.htm">removeRangeNames(Range, String)</a></td><td><div class="summary">remove all names from Range Target except the passed name (theName) and store them into list storedNames</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968976.htm">restoreRangeNames(Range, String[])</a></td><td><div class="summary">restore the passed storedNames into Range Target</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968929.htm">setExtents(Range, ref String, ref String, ref String)</a></td><td><div class="summary">common for DBListFetch, DBRowFetch and DBSetQuery Action procedures, setting the Extent Names at the beginning</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968989.htm">ToRange(Object)</a></td><td><div class="summary">converts ExcelDna (C API) reference to excel (COM Based) Range</div></td></tr></tbody></table></div><div class="footer">
			Produced by the <a href="https://livedocumenter.barryjones.me.uk/">Live Documenter</a>.
		</div></body></html>