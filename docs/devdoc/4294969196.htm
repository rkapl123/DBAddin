<html><head><title>DBMapper</title><link href="styles/default.css" type="text/css" rel="stylesheet" /></head><body><div class="header"> </div><br class="clear" /><div class="navigation"><ul><li><a href="index.htm">Documentation</a></li></ul><ul><li><a class="" href="4294967296-DBaddin.htm">DBaddin</a><ul><li><a class="current" href="4294969196.htm">DBMapper</a><ul><li><a class="" href="4294969196-Constructors.htm">Constructors</a></li><li><a class="" href="4294969196-Fields.htm">Fields</a></li><li><a class="" href="4294969196-Methods.htm">Methods</a></li></ul></li></ul></li></ul></div><div class="content"><h1>DBMapper Class</h1><div class="summary">DBMappers are used to store a range of data in Excel to the database. A special type of DBMapper is the CUD DBMapper for realizing the former DBSheets</div><div class="inheritance"><h2>Inheritance Hierarchy</h2><ul><li><span>System.Object</span><ul><li><span><a href="4294969149.htm">DBaddin.DBModif</a></span><ul><li><span class="current">DBaddin.DBMapper</span></li></ul></li></ul></li></ul></div><div class="details"><span class="namespace"><em>Namespace:</em> <a href="4294967296-DBaddin.htm">DBaddin</a></span><span class="assembly"><em>Assembly:</em> DBaddin in (DBaddin.dll)
								</span></div>
        <div class="syntax">
            <h2>Syntax</h2>
            <pre><span class="keyword">public</span> <span class="keyword">class</span> DBMapper : DBModif</pre>
        </div>
    <p>
				The DBMapper type exposes the following members.
			</p><h2>Constructors</h2><table><thead><tr><th class="icon" /><th>Class</th><th>Summary</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_constructor.png" alt="public constructor" /></td><td><a href="4294969197.htm">DBMapper(CustomXMLNode, Range)</a></td><td><div class="summary">constructor with definition XML and the target range for the DBMapper</div></td></tr></tbody></table><h2>Methods</h2><table><thead><tr><th class="icon" /><th>Name</th><th>Summary</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969213.htm">addHiddenFeatureDefs(CustomXMLNode)</a></td><td><div class="summary">to re-add hidden features only available in XML</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969200.htm">DBModifSaveNeeded()</a></td><td><div class="summary">checks whether DBModifier needs saving, either because execOnSave is set or in case of CUD DBMappers if any i/u/d Flags are present</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969215.htm">doDBModif(Boolean, String, Boolean)</a></td><td><div class="summary">execute the modifications for the DB Mapper by storing the data modifications in the DBMapper range to the database</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969211.htm">extendDataRange()</a></td><td><div class="summary">extend DataRange to "whole" DBMApper area (first row (header/field names) to the right and first column (first primary key) down)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969207.htm">getNonIntersectingRowsTarget(Range, Range, Int32)</a></td><td><div class="summary">gets the non intersecting rows of two ranges as the single column range given in tgtcolumn</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969201.htm">hadChanges()</a></td><td><div class="summary">pass back whether changes were done by the DB Modif object (needed to prevent deadlocks/warn user due to refreshing the underlying area)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969202.htm">insertCUDMarks(Range, Boolean)</a></td><td><div class="summary">inserts CUD (Create/Update/Delete) Marks at the right end of the DBMapper range</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969205.htm">isEmptyArray(Object)</a></td><td><div class="summary">checks whether passed array has only empty entries</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294969219.htm">notifyUserOfDataError(String, Int64, Int32)</a></td><td><div class="summary">notification of error for user including selection of error cell</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969212.htm">resetCUDFlags()</a></td><td><div class="summary">reset CUD FLags, either after completion of doDBModif or on request (refresh)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294969223.htm">setDBModifCreateFields(ref DBModifCreate)</a></td><td><div class="summary">set the fields in the DB Modifier Create Dialog with attributes of object</div></td></tr></tbody></table><h2>Fields</h2><table><thead><tr><th class="icon" /><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969233.htm">AutoIncFlag</a></td><td><div class="summary">first column is treated as an auto-incrementing key column, needed to ignore empty values there (otherwise DBMappers stop here)</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969234.htm">avoidFill</a></td><td><div class="summary">prevent filling of whole table during execution of DB Mappers, this is useful for very large tables that are incrementally filled and would take unnecessary long time to start the DB Mapper. If set to true then each record is searched independently by going to the database. If the records to be stored are not too many, then this is more efficient than loading a very large table.</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969232.htm">changesDone</a></td><td><div class="summary">used to pass whether changes were done</div></td></tr><tr><td><img src="styles/images/vsobject_field.png" alt="public field" /></td><td><a href="4294969230.htm">CUDFlags</a></td><td><div class="summary">respect C/U/D Flags (DBSheet functionality)</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969236.htm">deleteBeforeMapperInsert</a></td><td><div class="summary">if set, delete table before inserting the contents of DBMapper</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969228.htm">executeAdditionalProc</a></td><td><div class="summary">additional stored procedure to be executed after saving</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969229.htm">ignoreColumns</a></td><td><div class="summary">columns to be ignored (helper columns)</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969231.htm">IgnoreDataErrors</a></td><td><div class="summary">if set, don't notify error values in cells during update/insert</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969227.htm">insertIfMissing</a></td><td><div class="summary">if set, then insert row into table if primary key is missing there. Default = False (only update)</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969237.htm">onlyRefreshTheseDBSheetLookups</a></td><td><div class="summary">contains cells in DBSheetLookups with lookups that should only be refreshed after DB modification was done. If empty, all lookups are refreshed for that DB Modifier/Sheet</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969235.htm">preventColResize</a></td><td><div class="summary">flag to prevent automatic resizing of columns</div></td></tr><tr><td><img src="styles/images/vsobject_field.png" alt="public field" /></td><td><a href="4294969238.htm">previousCUDLength</a></td><td><div class="summary">For DBSheets the previous length of the DBMapper area is needed to tell additions with Ctrl+ from deletions with Ctrl-</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969226.htm">primKeysCount</a></td><td><div class="summary">count of primary keys in data-table, starting from the leftmost column</div></td></tr><tr><td><img src="styles/images/vsobject_field_private.png" alt="private field" /></td><td><a href="4294969225.htm">tableName</a></td><td><div class="summary">Database Table, where Data is to be stored</div></td></tr></tbody></table></div><div class="footer">
			Produced by the <a href="https://livedocumenter.barryjones.me.uk/">Live Documenter</a>.
		</div></body></html>