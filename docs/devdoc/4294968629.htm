<html><head><title>Globals</title><link href="styles/default.css" type="text/css" rel="stylesheet" /></head><body><div class="header"> </div><br class="clear" /><div class="navigation"><ul><li><a href="index.htm">Documentation</a></li></ul><ul><li><a class="" href="4294967296-DBaddin.htm">DBaddin</a><ul><li><a class="current" href="4294968629.htm">Globals</a><ul><li><a class="" href="4294968629-Methods.htm">Methods</a></li></ul></li></ul></li></ul></div><div class="content"><h1>Globals Class</h1><div class="summary">Global functions for DB Addin</div><div class="inheritance"><h2>Inheritance Hierarchy</h2><ul><li><span>System.Object</span><ul><li><span class="current">DBaddin.Globals</span></li></ul></li></ul></div><div class="details"><span class="namespace"><em>Namespace:</em> <a href="4294967296-DBaddin.htm">DBaddin</a></span><span class="assembly"><em>Assembly:</em> DBaddin in (DBaddin.dll)
								</span></div>
        <div class="syntax">
            <h2>Syntax</h2>
            <pre><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> Globals</pre>
        </div>
    <p>
				The Globals type exposes the following members.
			</p><h2>Methods</h2><table><thead><tr><th class="icon" /><th>Name</th><th>Summary</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968637.htm">balancedString(String, String, String, String)</a></td><td><div class="summary">returns the minimal bracket balancing string contained in theString, opening bracket defined in openBracket, closing bracket defined in closeBracket disregarding quoted areas inside optionally given quote character/string</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968649.htm">Change(String, String, String, String)</a></td><td><div class="summary">changes theString to changedString by replacing substring starting AFTER keystr and ending with separator (so "(keystr)...;" will become "(keystr)(changedString);", case insensitive !!</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968675.htm">checkMultipleDBRangeNames(Range)</a></td><td><div class="summary">check if multiple (hidden, containing DBtarget or DBsource) DB Function names exist in theRange</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968700.htm">convertToBool(Object)</a></td><td><div class="summary">converts a passed object (reference, value) to a boolean</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968690.htm">createFunctionsInCells(Range, ref Object)</a></td><td><div class="summary">creates functions in target cells (relative to referenceCell) as defined in ItemLineDef</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968686.htm">createListObject(Range)</a></td><td><div class="summary">create a ListObject one cell to the right of TargetCell and insert a dummy cmd sql definition for the list-object table (to be an external source)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968688.htm">createPivotTable(Range)</a></td><td><div class="summary">create a pivot table object one cell below TargetCell and insert a dummy cmd sql definition for the pivot-cache external query</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968662.htm">existsName(String)</a></td><td><div class="summary">helper function for check whether name exists in active workbook</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968667.htm">existsNameInSheet(ref String, Worksheet)</a></td><td><div class="summary">checks whether theName exists as a name in Worksheet theWs</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968664.htm">existsNameInWb(ref String, Workbook)</a></td><td><div class="summary">checks whether theName exists as a name in Workbook theWb</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968659.htm">existsSheet(ref String, Workbook)</a></td><td><div class="summary">checks whether worksheet called theName exists in workbook theWb</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968654.htm">fetchSubstr(String, String, String, Boolean)</a></td><td><div class="summary">fetches substring starting after keystr and ending with separator from theString, case insensitive !! if separator is "" then fetch to end of string</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968702.htm">formatDBDate(Double, Int32)</a></td><td><div class="summary">takes an OADate and formats it as a DB Compliant string, using formatting as formatting instruction</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968630.htm">functionSplit(String, String, String, String, String, String)</a></td><td><div class="summary">splits theString into tokens delimited by delimiter, ignoring delimiters inside quotes and brackets</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968697.htm">getCustPropertyBool(String, Workbook)</a></td><td><div class="summary">get a boolean type custom property</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968670.htm">getRangeFromNameInSheet(ref String, Worksheet)</a></td><td><div class="summary">get the range from a worksheet name in the given sheet</div></td></tr><tr><td><img src="styles/images/vsobject_method_private.png" alt="private method" /></td><td><a href="4294968693.htm">getRangeFromRelative(Range, String, ref Range)</a></td><td><div class="summary">gets target range in relation to origin range</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968673.htm">getUnderlyingDBNameFromRange(Range)</a></td><td><div class="summary">gets underlying DBtarget/DBsource Name from theRange</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968685.htm">refreshDBFuncLater()</a></td><td><div class="summary">"OnTime" event function to "escape" current (main) thread: event procedure to re-fetch DB functions results after triggering a recalculation inside Application.WorkbookBeforeSave</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968681.htm">refreshDBFunctions(Workbook, Boolean, Boolean)</a></td><td><div class="summary">recalculate fully the DB functions, if we have DBFuncs in the workbook somewhere</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968642.htm">replaceDelimsWithSpecialSep(String, String, String, String, String, String)</a></td><td><div class="summary">replaces the delimiter (delimiter) inside theString with specialSep, regarding both quoted areas inside quote and bracketed areas (inside openBracket/closeBracket)</div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method" /></td><td><a href="4294968677.htm">resolveConnstring(ref Object, ref String, Boolean)</a></td><td><div class="summary">create a final connection string from passed String or number (environment), as well as a EnvPrefix for showing the environment (or set ConnString)</div></td></tr></tbody></table></div><div class="footer">
			Produced by the <a href="https://livedocumenter.barryjones.me.uk/">Live Documenter</a>.
		</div></body></html>